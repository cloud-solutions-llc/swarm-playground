version: "3.8"

services:
  rabbitmq:
    image: rabbitmq:3.9.24-management
    hostname: queue.rabbitmq.int
    networks:
      - internal
    labels:
      app: rabbitmq
      role: queue
      namespace: infra
    environment:
      RABBITMQ_ERLANG_COOKIE: ${RABBITMQ_ERLANG_COOKIE}
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_DEFAULT_USER}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_DEFAULT_PASS}
      RABBITMQ_DEFAULT_VHOST: ${RABBITMQ_DEFAULT_VHOST}
    deploy:
      labels:
        - traefik.enable=true
        - traefik.docker.network=internal
        - traefik.constraint-label=internal
        - traefik.http.routers.rabbitmq.entrypoints=http
        - traefik.http.services.rabbitmq.loadbalancer.server.port=15672
        - traefik.http.routers.rabbitmq.rule=Host(`rabbitmq.swarm.int`)
        - traefik.http.routers.rabbitmq.service=rabbitmq@docker
      replicas: 1
      resources:
        limits:
          cpus: '0.3'
          memory: 256M
        reservations:
          cpus: '0.2'
          memory: 128M
      placement:
        constraints:
          - node.labels.rabbitmq == yes
    volumes:
      - ${PWD}/enabled_plugins:/etc/rabbitmq/enabled_plugins
      - rabbitmq-data:/var/lib/rabbitmq/
      - rabbitmq-logs:/var/log/rabbitmq
    env_file:
      - ${PWD}/../../.env

networks:
  internal:
    external: true

volumes:
  rabbitmq-data:
    driver: local
  rabbitmq-logs:
    driver: local
